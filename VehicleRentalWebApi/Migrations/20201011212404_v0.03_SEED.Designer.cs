// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleRentalWebApi.Data;

namespace VehicleRentalWebApi.Migrations
{
    [DbContext(typeof(VehicleRentalWebApiContext))]
    [Migration("20201011212404_v0.03_SEED")]
    partial class v003_SEED
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VehicleRentalWebApi.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BookFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BookTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Damage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TankAfter")
                        .HasColumnType("float");

                    b.Property<double>("TankBefore")
                        .HasColumnType("float");

                    b.Property<int>("VehicleID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleID");

                    b.ToTable("Booking");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookFrom = new DateTime(2020, 10, 12, 0, 24, 4, 339, DateTimeKind.Local).AddTicks(8990),
                            BookTo = new DateTime(2020, 10, 12, 1, 40, 4, 345, DateTimeKind.Local).AddTicks(4018),
                            Customer = "Will Smith",
                            Damage = "Minimum wear on the paint",
                            Details = "Short one hour and 16 minutes ride",
                            TankAfter = 500.0,
                            TankBefore = 750.0,
                            VehicleID = 1
                        },
                        new
                        {
                            Id = 2,
                            BookFrom = new DateTime(2020, 10, 12, 0, 24, 4, 345, DateTimeKind.Local).AddTicks(7331),
                            BookTo = new DateTime(2020, 10, 12, 1, 31, 4, 345, DateTimeKind.Local).AddTicks(7354),
                            Customer = "John Doe",
                            Damage = "Hopefully no damage",
                            Details = "Short one hour and 7 minutes ride",
                            TankAfter = 300.0,
                            TankBefore = 333.0,
                            VehicleID = 3
                        });
                });

            modelBuilder.Entity("VehicleRentalWebApi.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mileage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicle");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Red",
                            Details = "A brand new sedan",
                            LicensePlate = "CJ-30-RUN",
                            Mileage = "3000",
                            Model = "Sedan",
                            Status = "Available"
                        },
                        new
                        {
                            Id = 2,
                            Color = "Yellow",
                            Details = "A brand new coupe",
                            LicensePlate = "CJ-33-RUN",
                            Mileage = "40000",
                            Model = "Coupe",
                            Status = "Occupied"
                        },
                        new
                        {
                            Id = 3,
                            Color = "Black",
                            Details = "A brand new SUV",
                            LicensePlate = "CJ-35-RUN",
                            Mileage = "55555",
                            Model = "SUV",
                            Status = "Broken"
                        },
                        new
                        {
                            Id = 4,
                            Color = "Pink",
                            Details = "A brand new JEEP",
                            LicensePlate = "CJ-38-RUN",
                            Mileage = "14423",
                            Model = "JEEP",
                            Status = "Transfering"
                        });
                });

            modelBuilder.Entity("VehicleRentalWebApi.Models.Booking", b =>
                {
                    b.HasOne("VehicleRentalWebApi.Models.Vehicle", "Vehicle")
                        .WithMany("Bookings")
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
